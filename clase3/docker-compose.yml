services:
  web:
    image: nginx:alpine
    container_name: nginx_web
    ports:
      - "8080:80"
    volumes:
      - ./html:/usr/share/nginx/html:ro
    networks:
      - frontend
      - backend
    depends_on:
      - db


  db:
    image: postgres:16-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: curso
      POSTGRES_PASSWORD: clase3
      POSTGRES_DB: tarea
    ports:
      - "5432:5432"
    volumes:
      # Volumen para datos persistentes
      - postgres-data:/var/lib/postgresql/data
      # Script de inicialización
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4:8.6
    container_name: pgadmin_web
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: alvaro.chambi@endesyc.bo
      PGADMIN_DEFAULT_PASSWORD: clase3
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - backend

# ============================================
# REDES
# ============================================
networks:
  # Red para frontend
  frontend:
    driver: bridge

  # Red para backend (con configuración personalizada)
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

# ============================================
# VOLÚMENES
# ============================================
volumes:
  # Volumen para logs de la app
  web-logs:
    driver: local

  # Volumen para datos de PostgreSQL
  postgres-data:
    driver: local